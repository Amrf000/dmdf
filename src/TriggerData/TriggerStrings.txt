// All entries in this file correspond to entries in TriggerData.txt
// with the same key, and define the text to display for a given
// function.
//
// The first value is the name of the function.
// Following values are the layout of the text description,
// and each value may either be raw text, or a parameter.
// Parameters are distinguished from raw text with a '~' as the first
// character.
//
// Any display text to have a comma must be contained in double quotes


//***************************************************************************
[TriggerEventStrings]

TriggerRegisterMapInitSettingsEvent="Trigger Register Map Init Settings Event"
TriggerRegisterMapInitSettingsEvent="Trigger Register Map Init Settings Event"
TriggerRegisterMapInitSettingsEvent="The trigger is evaluated during the map settings initialization which is even before the game initialization."

TriggerRegisterMapInitEvent="Trigger Register Map Init Event"
TriggerRegisterMapInitEvent="Trigger Register Map Init Event"
TriggerRegisterMapInitEventHint="The trigger is evaluated during the map initialization."

TriggerRegisterMapStartEvent="Trigger Register Map Start Event"
TriggerRegisterMapStartEvent="Trigger Register Map Start Event"
TriggerRegisterMapStartEventHint="The trigger is executed during the map start (after the final class selection)."

TriggerRegisterMapOnRestoreCharactersEvent="Trigger Register Map On Restore Characters Event"
TriggerRegisterMapOnRestoreCharactersEvent="Trigger Register Map On Restore Characters Event"
TriggerRegisterMapOnRestoreCharactersEventHint="The trigger is evaluated when the characters are restored from another map."

TriggerRegisterMapOnInitVideoSettingsEvent="Trigger Register Map Init Video Settings Event"
TriggerRegisterMapOnInitVideoSettingsEvent="Trigger Register Map Init Video Settings Event"
TriggerRegisterMapOnInitVideoSettingsEventHint="Add all calls which have to be called when starting a video."

TriggerRegisterMapOnInitVideoSettingsEvent="Trigger Register Map Init Video Settings Event"
TriggerRegisterMapOnInitVideoSettingsEvent="Trigger Register Map Init Video Settings Event"
TriggerRegisterMapOnInitVideoSettingsEventHint="Add all calls which have to be called when starting a video."

TriggerRegisterMapOnResetVideoSettingsEvent="Trigger Register Map Reset Video Settings Event"
TriggerRegisterMapOnResetVideoSettingsEvent="Trigger Register Map Reset Video Settings Event"
TriggerRegisterMapOnResetVideoSettingsEventHint="Add all calls which have to be called when ending a video."

//***************************************************************************
[TriggerConditionStrings]

OperatorCompareCharacter="Character Comparison"
OperatorCompareCharacter=~Value," ",~Operator," ",~Value
OperatorCompareCharacterHint=

OperatorCompareClass="Character Class Comparison"
OperatorCompareClass=~Value," ",~Operator," ",~Value
OperatorCompareClassHint=

//***************************************************************************
[TriggerActionStrings]

ChangeMap="Change Map"
ChangeMap="Change map to map with name ",~String
ChangeMapHint="Can only be used in a singleplayer campaign."

SetZoneEnabled="Set Zone Enabled"
SetZoneEnabled="Set Zone ",~Zone," enabled status to ",~Flag
SetZoneEnabledHint="A disabled zone does not change the map."

SetInfoCondition="Set Info Condition"
SetInfoCondition="Set for Info ",~Info," the condition to ",~Condition
SetInfoConditionHint=""

SetInfoAction="Set Info Action"
SetInfoAction="Set for Info ",~Info," the action to ",~Action
SetInfoActionHint=""

SetInfoConditionAndActionByTrigger="Set Info Condition And Action By Trigger"
SetInfoConditionAndActionByTrigger="Set for Info ",~Info," the condition and action by trigger ",~Trigger
SetInfoConditionAndActionByTriggerHint=""

ShowTalkStartPage="Show Talk Start Page"
ShowTalkStartPage="Show the talk start page of Talk ",~Talk," for Character ",~Character
ShowTalkStartPageHint=""

ShowTalkRange="Show Talk Range"
ShowTalkRange="Show for Talk ",~Talk," from including info index ",~Index," to including info index ",~Index," infos to Character ",~Character
ShowTalkRangeHint=""

ShowTalkUntil="Show Talk Until"
ShowTalkUntil="Show Talk ",~Talk," to including info index ",~Index," to Character ",~Character
ShowTalkUntilHint=""

CloseTalk="Close Talk For Character"
CloseTalk="Close Talk ",~Talk," for Character ",~Character
CloseTalkHint=""

AddExitButton="Add Exit Button"
AddExitButton="Add Exit Button to Talk ",~Talk
AddExitButtonHint="The exit button closes the talk."

Speech="Speech"
Speech="Speech for Info ",~Info," to with character ",~Character," talking to character ",~Flag," with text ",~Text," and sound ",~Sound
SpeechHint=""

CreateQuestArea="Create Quest Area"
CreateQuestArea="Creates quest area at rect ",~Rect," using a fog modifier ",~Flag
CreateQuestAreaHint="Creates a quest area where characters can gather to activate an event."

SetCharacterQuestReward="Set Character Quest Reward"
SetCharacterQuestReward="Set Reward for Character Quest ",~Quest," of Reward Type ",~Type," to Value ",~Value
SetCharacterQuestRewardHint=""

SetQuestItemReward="Set Quest Item Reward"
SetQuestItemReward="Set Reward for Quest Item ",~QuestItem," of Reward Type ",~Type," to Value ",~Value
SetQuestItemRewardHint=""

SetFellowRevivalTitle="Set Fellow Revival Title"
SetFellowRevivalTitle="Set revival title of ",~Fellow," to ",~title
SetFellowRevivalTitleHint="Sets the title for the timer dialog which is shown on reviving the fellow."

ShareFellowWithAll="Share Fellow With All"
ShareFellowWithAll="Share fellow ",~Fellow," with all characters"
ShareFellowWithAllHint="Shares the control via a fellow with all character owning players."

ShareFellowWithCharacter="Share Fellow With Character"
ShareFellowWithCharacter="Share fellow ",~Fellow," with character ",~Character
ShareFellowWithCharacterHint="Shares the control via a fellow with a specific character owning players."

ResetFellow="Reset Fellow"
ResetFellow="Reset fellow ",~Fellow
ResetFellowHint="Resets the control via a fellow. No human player can control the fellow afterwards."

SetFellowDescription="Set Fellow Description"
SetFellowDescription="Set description for fellow ",~Fellow," to ",~Description
SetFellowDescriptionHint="The description is shown to a player when the fellow is shared with him."

SetFellowTalk="Set Fellow Talk"
SetFellowTalk="Set Fellow ",~Fellow," Talk enabled to ",~Flag
SetFellowTalkHint=""

RoutineSetPartner="Set Routine Partner"
RoutineSetPartner="Set Partner for Routine ",~Routine," to unit ",~Unit
RoutineSetPartnerHint=""

RoutineSetFacing="Set Routine Facing"
RoutineSetFacing="Set Facing for Routine ",~Routine," to ",~Real
RoutineSetFacingHint=""

ShrineEnableForAll="Enable Shrine For All"
ShrineEnableForAll="Enable Shrine ",~Shrine," For All Characters Showing Effect ",~Flag
ShrineEnableForAllHint=""

// Obsolete actions
//AddPerfLogLabel="** AddPerfLogLabel **"
//AddPerfLogLabel="** AddPerfLogLabel(",~Label,") **"
//AddPerfLogLabelHint="** This is for debugging purposes only - remove before ship. **"

//Cheat="** Cheat **"
//Cheat="** Cheat(",~Label,") **"
//CheatHint="** This is for debugging purposes only - remove before ship. **"



//***************************************************************************
[TriggerCallStrings]

JASS="JASS Code"
JASS="JASS Code: ",~Code
JASSHint="Is directly used as JASS code."

EnglishGermanString="English German String"
EnglishGermanString="Translate English ",~String," into German ",~String," if necessary"
EnglishGermanStringHint="The resulting string depends on the players language."

GetCharacterPlayers="Get Character Players"
GetCharacterPlayers="Get Character Players"
GetCharacterPlayersHint="Gets all players which currently have a character."

PlayerCharacter="Player character"
PlayerCharacter=~Player,"'s character"
PlayerCharacterHint="Each player can have one character at maximum."

CharacterClass="Character Class"
CharacterClass="Class of Character ",~Character
CharacterClassHint="Every character has one class."

CharacterInventory="Character Inventory"
CharacterInventory="Inventory of Character ",~Character
CharacterInventoryHint="Every character has one inventory."

InventoryHasItemType="Inventory Has Item Type"
InventoryHasItemType="Inventory ",~Inventory," has item type ",~ItemType
InventoryHasItemTypeHint="Returns true if the item type is in the backpack or in the equipment."

InventoryTotalItemTypeCharges="Inventory Total Item Charges"
InventoryTotalItemTypeCharges="Total item charges in Inventory ",~Inventory," of item type ",~ItemType
InventoryTotalItemTypeChargesHint="Adds all charges in the backpack as well as in the equipment."

MapZoneName="Map Zone Name"
MapZoneName="Map Zone Name"
MapZoneNameHint="The zone name of the current map, used for changing the map in singleplayer."

GetTriggerZoneName="Get Triggering Zone Name"
GetTriggerZoneName="Get Triggering Zone Name"
GetTriggerZoneNameHint="Can only be used with the character restores event. Returns the zone name of the zone from which the characters are restored."

CreateZone="Create Zone"
CreateZone="Create Zone with Map Name ",~Name," at Rect ",~Rect
CreateZoneHint="When the rect is entered in a singleplayer campaign, the map with the name is loaded."

ItemTypeByItem="Item Type By Item"
ItemTypeByItem="Item Type By Item ",~Item
ItemTypeByItemHint="Gets the item type by an item. If the item has no custom item type it returns 0."

CreateQuestArea="Create Quest Area"
CreateQuestArea="Creates quest area at rect ",~Rect," using a fog modifier ",~Flag
CreateQuestAreaHint="Creates a quest area where characters can gather to activate an event."

CreateCharacterQuest="Create Character Quest"
CreateCharacterQuest="Create Quest for Character ",~Character," with title ",~Title
CreateCharacterQuestHint="A character only quest."

CreateCharacterQuestItem="Create Character Quest Item"
CreateCharacterQuestItem="Create Quest Item for Quest ",~Quest," with title ",~Title
CreateCharacterQuestItemHint=""

CreateTalk="Create Talk"
CreateTalk="Creates a talk using unit ",~Unit
CreateTalkHint="Creates a talk which can be hold between a unit and a character."

AddInfo="Add Information"
AddInfo="Add information to ",~Talk," permanently ",~permanently," and important ",~important," with text ",~text
AddInfoHint="Adds information to a talk."

AddExitButton="Add exit button"
AddExitButton="Add exit button to ",~Talk
AddExitButtonHint="The exit button closes the talk."

InfoConditionByTrigger="Info Condition By Trigger"
InfoConditionByTrigger="Gets the info condition by trigger ",~Trigger," for info ",~Info
InfoConditionByTriggerHint="Gets a info condition by a trigger. The trigger is evaluated and the parameters are stored in it."

InfoActionByTrigger="Info Action By Trigger"
InfoActionByTrigger="Gets the info action by trigger ",~Trigger," for info ",~Info
InfoActionByTriggerHint="Gets a info action by a trigger. The trigger is executed and the parameters are stored in it."

TalkStartActionByTrigger="Talk Start Action By Trigger"
TalkStartActionByTrigger="Gets the talk start action by trigger ",~Trigger," for Talk ",~Talk
TalkStartActionByTriggerHint="Gets the talk start action by a trigger. The trigger is executed and the parameters are stored in it."

GetTriggerInfo="Get Trigger Info"
GetTriggerInfo="Gets the info of trigger"
GetTriggerInfoHint="If the trigger is evaluated or executed for an info it has stored the info."

GetTriggerTalk="Get Trigger Talk"
GetTriggerTalk="Gets the talk of trigger"
GetTriggerTalkHint="If the trigger is evaluated or executed for an info it has stored the talk."

GetTriggerCharacter="Get Trigger Character"
GetTriggerCharacter="Gets the character of trigger"
GetTriggerCharacterHint="If the trigger is evaluated or executed for an info it has stored the character."

GetInfoTalk="Get Info Talk"
GetInfoTalk="Get Talk of Info ",~Info
GetInfoTalkHint="Gets the corresponding talk of an info."

GetInfoIndex="Get Info Index"
GetInfoIndex="Get Index of Info ",~Info
GetInfoIndexHint="The index is used in many functions as parameter. Every index for a info in a specific talk must be unique."

InfoHasBeenShownToCharacter="Info Has Been Shown To Character"
InfoHasBeenShownToCharacter="Info of Talk ",~Talk," with Index ",~Index," has been shown to Character ",~Character
InfoHasBeenShownToCharacterHint="A info has been shown to a character, when the player clicked on it."

CreateFellow="Create Fellow"
CreateFellow="Creates a fellow using the unit ",~Unit," and the unit's talk ",~Talk
CreateFellowHint="Creates a new fellow who can be shared to the human players and controlled by them. Make sure it is a hero unit."

CreateShrine="Create Shrine"
CreateShrine="Create shrine using shrine unit ",~Unit,", shrine destructable ",~Destructable,", discover rect ",~DiscoverRect,", revival rect ",~RevivalRect," and revival facing angle ",~Facing
CreateShrineHint="Creates a new revival shrine which can be discovered and used for reviving a character."

CreateSpawnPoint="Create Creep Spawn Point"
CreateSpawnPoint="Create creep spawn point"
CreateSpawnPointHint="Creates a new creep spawn point where creeps will respawn automatically after dying and can drop items."

SpawnPointAddUnitWithType="Add Unit to Spawn Point"
SpawnPointAddUnitWithType="Add to spawn point ",~SpawnPoint," the unit ",~Unit," spawning with the chance of ",~Chance
SpawnPointAddUnitWithTypeHint="Adds an existing unit to a spawn point. It will be respawned after a timeout when it dies."

SpawnPointAddNewItemType="Add New Dropping Item Type to Spawn Point"
SpawnPointAddNewItemType"Add to spawn point ",~SpawnPoint," for respawning unit member with index ",~Index," the new dropping item type ",~ItemType," with a chance ",~Chance
SpawnPointAddNewItemTypeHint=""

CreateItemSpawnPoint="Create Item Spawn Point"
CreateItemSpawnPoint="Create Item Spawn Point using X ",~Real," and Y ",~Real," and Item ",~Item
CreateItemSpawnPointHint=""

CreateDungeon="Create Dungeon"
CreateDungeon="Create Dungeon with Name ",~String," using Camera Bounds Rect ",~Rect," and view rect ",~Rect
CreateDungeonHint="A dungeon is an area on the map where the camera bounds are set when the character enters it."

CreateRoutineTalks="Create Routine Talks"
CreateRoutineTalks="Create Routine talks using basic routine type ",~RoutineType," and NPC unit ",~Unit," and starting at ",~TimeOfDay," and ending at ",~TimeOfDay," with target rect ",~Rect
CreateRoutineTalksHint=""